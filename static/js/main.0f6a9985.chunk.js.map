{"version":3,"sources":["component/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","component/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6WA6CeA,MAxCf,YAAsD,IAAtCC,EAAqC,EAArCA,GAAGC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACzC,OACI,cAAC,IAAD,CAAMC,GAAK,CACPC,SAAU,gBACVC,MAAM,CACFR,KACAC,OACAC,QACAC,UACAC,SACAC,WARR,SAWA,sBAAKI,UAAU,QAAf,UACI,qBAAKA,UAAU,aAAaC,IAAON,EAAQO,IAAMT,EAAOA,MAAOA,IAC/D,sBAAKO,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BP,IAC9B,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,gBAAd,SACKJ,EAAOO,KAAI,SAACC,EAAMC,GAAP,OACR,6BAAiBD,GAARC,QAGlB,qBAAIL,UAAU,iBAAd,UAAgCN,EAAQY,MAAM,EAAE,KAAhD,kBCgEAC,G,kNA7CbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAIGC,IAAMC,IAAI,4DAJb,gBAGLJ,EAHK,EACJK,KACHA,KACEL,OAEL,EAAKM,SAAS,CAACN,SAAOD,WAAW,IALvB,2C,kEASVQ,KAAKN,c,+BAGE,IAAD,EACsBM,KAAKjB,MAA1BS,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACD,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAED,qBAAKA,UAAU,SAAf,SACES,EAAON,KAAI,SAAAc,GAAK,OACjB,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GA7BJ4B,IAAMC,Y,MC/BVC,MAZf,WACI,OACI,sBAAKrB,UAAU,mBAAf,UACF,gJAIA,kECWSsB,E,kLAlBS,IAAD,EACaN,KAAKO,MAA1BC,EADQ,EACRA,SAAUC,EADF,EACEA,aACKC,IAAnBF,EAASzB,OACR0B,EAAQE,KAAK,O,+BAIZ,IACEH,EAAYR,KAAKO,MAAjBC,SACP,OAAGA,EAASzB,MACD,+BAAOyB,EAASzB,MAAMN,QAEtB,S,GAbE0B,IAAMC,W,MCUZQ,MARf,WACI,OACI,sBAAK5B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMH,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCYGgC,MAZf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,cAAC,IAAD,CAAOuB,KAAK,SAASE,UAAWX,IAChC,cAAC,IAAD,CAAOS,KAAK,gBAAgBE,UAAWV,QCR/CW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0f6a9985.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id,year,title,summary,poster,genres}){\r\n    return (\r\n        <Link to= {{\r\n            pathname: \"/movie-detail\",\r\n            state:{\r\n                id,\r\n                year,\r\n                title,\r\n                summary,\r\n                poster,\r\n                genres\r\n            }\r\n        }}>\r\n        <div className=\"movie\">\r\n            <img className=\"movie__img\" src = {poster} alt ={title} title={title}/>\r\n            <div className=\"movie__data\">\r\n                <h4 className=\"movie__title\">{title}</h4>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre,index) =>(\r\n                        <li key={index}>{genre}</li>\r\n                    ))}\r\n                </ul>\r\n               <h4 className=\"movie__summary\">{summary.slice(0,180)}...</h4>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n        );\r\n\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year:PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    poster:PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie; ","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport Movie from \"../component/Movie\";\r\nimport \"./Home.css\";\r\n// import PropTypes from \"prop-types\";\r\n/*\r\n  JSX & PROPS\r\n  1. render는 한 개밖에 되지 않는다. 따라서 APP 안에서 모든 component정보를 처리하면 된다.\r\n  2. props특징이 있는데, 이는 component의 파라미터로 변수를 받게 되고, 해당 컴포넌트에 key - value 형식으로 데이터를 \r\n     저장 할 수 있다. 따라서, 해당 component에서 지정된 값으로 출력이 가능하다.\r\n\r\n    ※component의 첫 번째 글자는 upper(대문자) 를 사용한다.\r\n  \r\n  map구조를 통해 배열 구조를 각각 하나씩 접근하여 적용이 가능하다.\r\n  즉, playerInfo에 있는 정보들을 하나씩 분리하여, Info에 있는 파라미터에 접근 할 수 있도록 한다. \r\n  다만, react에서는 Info(component)들을 구분하지 못하므로, key = {element.id}의 형식으로 고유하게 구분 지어 줘야 에러가 나오지 않음.\r\n\r\n  porpTypes:\r\n    component에 사용되는 변수 혹은 데이터의 형태, 정보등을 확인하고, 검열이 가능하게 끔 제공하는 패키지.\r\n    제공되는 변수의 타입 (string,number,array....) 혹은 제공되는 array안에 어떤 정보가 있는지를 확인 할 수 있는 패키지임. \r\n*/\r\n\r\n/*\r\n  ※react에서 새로운 setState를 실행할 때마다, render 메서드가 새롭게 실행이 됨.\r\n  (render에서 실행된 event는 새로고침이 되지 않는다. 따라서 새롭게 실행을 해야한다.)\r\n\r\n  component LifeCycle:\r\n  1. Mounting: component가 최초 실행 되었을 때 (약간 안드로이드에서 attach or onCreate와 비슷)\r\n    1-1 constructor(생성자) : 최초 실행\r\n    1-2 render() : render 메서드 자동 실행\r\n    1-3 componentDidMount() : render 메서드 실행되고 나서 실행\r\n  2. Updating: 최초로 render 하지 않고, 앞선 예제처럼 setState를 통해 해당 class component에 변화가 주어졌을 때.\r\n    2-1 render() : render 메서드가 실행 될 때\r\n    2-2 componentDidUpadte(): Update 과정에서 render 메서드가 실행되고 나서 실행되는 메서드\r\n  3. UnMounting: component가 종료될 때 (ex 페이지 종료, state를 통한 페이지 교체)\r\n\r\n\r\n  handler와 같이 setTimeout 메서드를 이용해서 시간차 함수를 실행 시킬 수 있음.\r\n\r\n  영화 API 가져오는 순서\r\n  1. loading 이후 didMount에서 API 가져오는 구문 작성.\r\n    1-1 영화 API에서 가져오는게 좀 느리기 때문에, async + await을 통해 해당 정보를 받아오기 전 까지는 아무것도 다음 행동을 취하지 않도록 설정\r\n  2. 영화정보를 받아오면, state안에 movies라는 배열 안에 해당 정보 삽입 및 정보 띄우기\r\n    2-1 정보 띄울 때 Props를 통해 정보 거르기 한번 해줌. \r\n*/\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n\r\n  getMovies = async() =>{\r\n    const{data:\r\n      {data:\r\n        {movies}}} \r\n         = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({movies,isLoading: false});\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render(){\r\n    const {isLoading, movies} = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading?(\r\n        <div className=\"loader\">\r\n          <span className=\"loader__text\">Loading...</span>\r\n        </div>):\r\n        (<div className=\"movies\">\r\n          {movies.map(movie=>(\r\n          <Movie \r\n            key={movie.id}\r\n            id={movie.id}\r\n            year={movie.year}\r\n            title={movie.title}\r\n            summary={movie.summary}\r\n            poster={movie.medium_cover_image}\r\n            genres={movie.genres}\r\n            />\r\n        ))}\r\n        </div>)  \r\n      }\r\n      </section>   \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(){\r\n    return (\r\n        <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n    componentDidMount(){\r\n        const {location, history} = this.props;\r\n        if(location.state === undefined){\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {location} = this.props;\r\n        if(location.state){\r\n            return <span>{location.state.title}</span>\r\n        }else{\r\n            return null;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>);\r\n}\r\n\r\nexport default Navigation","import React from \"react\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./component/Navigation\";\nimport \"./App.css\";\n\nfunction App(){\n  return(\n    <HashRouter>\n      <Navigation/>\n        <Route path=\"/\" exact={true} component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/movie-detail\" component={Detail}/>\n    </HashRouter>\n\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// react에서는 한 개의 컴포넌트만 랜더링 할 수 있음. 따라서, 많은 컴포넌트를 사용하고 싶다면,\n// App 안에서 여러가지 js 파일들을 적용해야 함.\n\nReactDOM.render(\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}